name: CI/CD Breast Cancer API

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Instalar dependencias
      run: |
        pip install -r requirements.txt
        
    - name: Prueba del servicio de API
      run: |
        # 1. Construir la imagen de Docker
        docker build -t breast-cancer-api .

        # 2. Iniciar el contenedor en segundo plano con la variable de entorno
        docker run -d -p 8000:8000 -e PORT=8000 --name test-api breast-cancer-api

        # 3. Esperar a que el servicio esté listo, verificando el endpoint /health
        echo "Esperando a que el servicio esté listo..."
        for i in $(seq 1 60); do
          if curl --output /dev/null --silent --head --fail http://localhost:8000/health; then
        echo "✅ Servicio listo después de $i segundos."
        break
        fi
        sleep 1
        done

        # 4. Fallar la prueba si el servicio no se inicia a tiempo
        if ! curl --output /dev/null --silent --head --fail http://localhost:8000/health; then
          echo "❌ El servicio no se inició a tiempo."
          exit 1
        fi

        # 5. Ejecutar la prueba de la API con Python
        # Este script debe hacer una petición POST al endpoint /predict
        python test_api_localhost.py

        # 6. Detener el contenedor al finalizar
        docker stop test-api

    - name: Login a Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Push a Docker Hub
      run: |
        docker tag breast-cancer-api ${{ secrets.DOCKER_USERNAME }}/breast-cancer-api:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/breast-cancer-api:latest
